{
    "type": "Task",
    "taskConfig": {
        "steps": [{
            "@type": "FilterSet",
            "filters": [
                {
                    "displayName": "Concept name (Trigger)",
                    "key": "trigger.ObservationConceptName",
                    "type": "UNICODE",
                    "negationOperator": true,
                    "operator": "equals",
                    "expression": "pregnancy_urine_test"
                }, {
                    "displayName": "Observation value (Trigger)",
                    "key": "trigger.ObservationValue",
                    "type": "UNICODE",
                    "negationOperator": true,
                    "operator": "equals",
                    "expression": "positive"
                }
            ]
        }, {
            "@type": "DataSource",
            "providerId": 6899548,
            "objectId": 1,
            "type": "Person",
            "name":"id",
            "lookup":[ {
                "field": "mrs.person.lookupField.id",
                "value": "trigger.PatientId"
            }],
            "failIfDataNotFound": false
        }]
    },
    "name": "Pregnancy SMS",
    "actions": [
        {
            "displayName": null,
            "channelName": "sms.api",
            "moduleName": "motech-sms-api-bundle",
            "moduleVersion": "0.19.0.SNAPSHOT",
            "subject": "SendSMS",
            "serviceInterface": null,
            "serviceMethod": null,
            "values": {
                "delivery_time": "12:00",
                "message": "Congratulations,                {{ad.6899548.Person#1.firstName}}, your pregnancy test was positive. Please reply to schedule a clinic visit with your midwife.",
                "message": "{{trigger.PatientId}}"
            }
        }
    ],
    "trigger": {
        "displayName": null,
        "channelName": "mrs.name",
        "moduleName": "motech-mrs-api",
        "moduleVersion": "0.19.0.SNAPSHOT",
        "subject": "org.motechproject.mrs.api.Observaion.Created"
    },
    "enabled": false,
    "hasRegisteredChannel": true,
    "validationErrors": [
        {
            "args": [
                "mrs.person.lookupField.id",
                "Person",
                "mrs.name"
            ],
            "message": "task.validation.error.providerObjectLookupNotExist"
        }
    ]
}
